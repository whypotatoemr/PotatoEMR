@page "/"
@using PotatoEMR.Components.Pages.PatientLevel
@using PotatoEMR.Components.Pages.TopLevel
@rendermode InteractiveServer

@* nav has to be here with interactive rendermode, otherwise clicks dont call function *@
<nav id="main-nav">
    <span>PotatoEMR 🥔</span>
    <a href="#" @onclick="@(() => ShowTopPage(typeof(CalendarPageComponent), new Dictionary<string, object>{{ "test", 3 }}))">Calendar</a>    	
    <a href="#" @onclick="@(() => ShowTopPage(typeof(PatientListsPageComponent), null))">Patient Lists</a>
    <SearchPatientComponent OnPatientSelected="HandlePatientSelected"/>
    <a href="#" @onclick="@(() => ShowTopPage(typeof(RegisterPatientPageComponent), null))">Register Patient</a>
    <a href="#" @onclick="@(() => ShowTopPage(typeof(SettingsPageComponent), null))">Settings</a>
</nav>

@* 
clicking a nav link sets the component with main page content
this could also be if/else, idk if DynamicComponent is too clever 
need to update nav links here when adding new main page components
*@
<div id="main-content">
    <DynamicComponent Type="@mainPageType" Parameters="@mainPageParameters" />
</div>

@code {
    //shows patient lists by default on home screen
    private Type mainPageType = typeof(PatientListsPageComponent);
    private Dictionary<string, object>? mainPageParameters = null;
    private void ShowTopPage(Type componentType, Dictionary<string, object>? parameters)
    {
        mainPageType = componentType;
        mainPageParameters = parameters;
    }

    private void HandlePatientSelected(Patient patient)
    {
        ShowTopPage(typeof(PatientPageComponent), new Dictionary<string, object>{{ "pat", patient }});
    }
}